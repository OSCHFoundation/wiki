# 智能合约
OSCH可以被用来构建复杂的智能合约，智能合约是基于逻辑和自动执行协议的计算程序。整个技术和合法的合约可以追溯到1950年，当时学者设计的计算方法可以在不涉及法律程序的情况下执行法律程序，智能合约由Nick Szabo在1997年正式定义智能合约将协议与用户界面相结合，以用来保护计算机之间的关系。设计这些系统的目标和原则来自法律原则，经济理论可靠的安全协议理论。

近年来，区块链技术区块链实现了一种新的智能合约，其中包括协议条款，加密授权和不动产价值转移。

对于OSCH network，智能合约只要指OSCH Smart Contracts（OSC），OSC主要表现在各种事务的组合，使用各种连接约束执行。

以下是创建OSC时候可以考虑的约束
* **多重签名(Multisignature)**-授权某项操作需要哪些密钥，哪些方需要就某一情况达成一致才能执行这些步骤？  
多重签名：是需要多方签名签署来自账户的交易的概念。通过签名权重和阀值，决定这个签名所具有的权限。
* **批处理和原子性(Batching/Atomicity )**-某些操作必须一起生效或者失败？某些必须发生才能使得成功或失败？  
批处理：是在一个事务中包含多个操作的概念，原子性（不可以再分）：是给予一些列操作以保障，如一个操作失败了，则在提交给网络时，事务中所有操作都将失败。
* **序列（Sequence）** - 如何处理一些列交易，有哪些限制和依赖？  
序列在osch网络上是由序列号控制的（sequence number），在事务（transacrion）中使用序列号，他能确保不会出现双花交易，在一个ledger中提交同一个交易，另外的不会成功。
* **时间限制（Time Bounds）** - 什么时候进行一笔交易？  
对打包签名后的事务有效时段的限制，“时间限制”使时间可以在智能合约里表示。

## 两方共同管理托管账户，锁仓和恢复

### 案例介绍
刘英出售了50个CODE币给长贵，但要求长贵在一年之内不能转售代币。刘英当然不信任长贵了，所以刘英想代管长贵今年的币。长贵抗议这种行为，他也不确定刘英一年后会不会有币给他。长贵怎么相信一年后会得到币？此外，长贵还有健忘症，他可能在等待一年后忘记所要他的代币。刘英想要建立一个恢复机制，一年后长贵没有取代币情况下，在过几个月，刘英则可以取回50个code，他们用代币回收这种方式就不会有代币丢失。


### 实现
一个托管合约可以在两个用户之间创建，原账户-为合约提供提供token的账户，目标账户-在合约结束接收合约内token。
需要三个账户才能在双之间执行按时间锁币托管合同：一个原账户，一个目标账户和一个托管账户。
 * 原账户：用来初始化并注入token到托管账户
 * 目标账户：最终获得托管token的账户
 * 托管账户：由源账户创建，并在锁币期间持有托管token  

必须为托管协议商定两个时间段
* 锁币期间：任何一方不得操转移使用资产（比如一年内）
* 恢复期：源账户有能力恢复从托管账户的资金  （比如一年半之后）
* 两个时期之间为目标账户可将token转移时间

五个交易将被用来创建一个托管合约，将按照创建顺序在下面作出解释。
变量解释
* N, M - 托管账户和源账户分别N+1，M+1表示下一个连续的序列号
* T - 锁定期
* D - 锁定期开始时间
* R - 恢复期  

对于下面描述的设计模式，正在交换的资产是本币资产，向osch网络提交事务的顺序和创建顺序不同，以下按照提交顺序流程图。  
![](ssc-escrow.png)

**Transaction 1:创建一个托管账户**
Account: 源账户
Sequence Number: M
Operations:Create Account：创建一个托管账户在系统里面，里面有最少账户保证金和最后转出的手续费。
Signers: source account
说明：创建一个托管，锁定token的账户，确保这个账户有充足手续费。

**Transaction 2: 启动多重签名**
Account: 托管账户
Sequence Number: N
Operations:
*  Set Option - Signer：添加目标账户的公钥，作为托管账户的一个签名者，权重设置为1
* Set Option - Thresholds & Weights：设置主私钥权重为1，高低中阀值权限都设置为2。
    * master weight: 1
    * low threshold: 2
    * medium threshold: 2
    * high threshold: 2
说明：将添加一个目标账户公钥权重为1，和托管账户私钥都设置为1，高中低阀指都为2。也就是必须同时用目标私钥和托管私钥签名，才能在托管账户执行操作。

**Transaction 3:解锁**
Account: 托管账户
Sequence Number: N+1
Operations:
* Set Option - Thresholds & Weights: 设置主要私钥权重为0，各个阀值为1（在解锁期间，账户将完全由目标账户掌管）
    * master weight: 0
    * low threshold: 1
    * medium threshold: 1
    * high threshold: 1  

Time Bounds:
* minimum time: unlock date
* maximum time: 0   

Immediate Signer: 托管账户签名
Eventual Signer: 目标账户签名
说明：这个操作只是提前用两个私钥签名创建，等到unlock date(一年后)才能提交，提交后只要目标私钥就可以操作托管账户取出token。

Immediate Signer: escrow account
Eventual Signer: destination account  
**Transaction 4: 回收**
Account: 托管账户
Sequence Number: N+1
Operations:
* Set Option - Signer
    * weight: 0
* Set Option - Thresholds & Weights
    * low threshold: 1
    * medium threshold: 1
    * high threshold: 1  

Time Bounds:
* minimum time: recovery date
* maximum time: 0 

Immediate Signer: 托管账户签名
Eventual Signer: 目标账户签名
说明：这个与操作3为同时在两个私钥签名下创建，当达到recoverry date（一年半），目标没有执行操作3，则可以执行该操作，取消目标账户权限，账户由托管私钥控制。

**Transaction 5: 发放资金**
Account: 源账户
Sequence Number: M+1
Operations:
* payment：像托管账户发送锁定金额

Signer: source account
说明：在进行1，2操作后，托管账户由两个私钥控制，就可以向托管账户转入托管token。

## 案例2联合众筹  
长贵需要筹集一笔资金支付公司用于“教狗写代码”项目。但他想从公众那里募集资金，如果募资足够，他将直接启动这个项目。如果募资是不足的，将有一个机制退还捐款资金。为了保证狡诈的长贵对资助者的诚信和可靠，长贵找了好朋友大佬永强。永强将保证长贵对他朋友的诚信，以此作为让人们入股的一种方式。

### 实现模型  
在下面简单实例中，众筹智能合约至少需要三方，其中两方为同意支持众筹（我们叫它信托甲和信托乙），第三方最终获得资金。必须在osch链创建一个代币执行众筹机制，代币必须由两方之一创建。发币账户，可以按照每个代币任意价格定价，持币账户将接受osch资金，在众筹结束后，如果未达到预定osch目标，将返回贡献者资金。  

五币交易用于创建众筹合同，以下用于合同变量解释
* N，M - 分别是甲方账户和持有账户的序号; N + 1表示下一个连续的交易号，依此类推  
* V - 众筹活动希望提高的总价值
* X - 销售代币的价值

四个账户用于创建基本众筹模式
* 持币账户：这是一个处理收集与捐助者互动账户，需要甲乙签字才能进行任何交易  
* 目标账户：目标公司所拥有账户，在成功时将众筹资金交给该账户  
* 甲信托账户：用于管理持币账户  
* 乙信托账户：用于管理持币账户  

创建此设计模式的交易可以由赞助众筹活动的任何一方创建和提交。交易按创建顺序呈现。提交给OSCH Network的顺序是有条件的，取决于众筹活动的成功与否。
![](scc2.png)

**Transaction 1:**
账户甲创建持币账户
**Transaction 2:**
设置持币账户主私钥权重为0，阀指都为2，甲乙账户公钥权重各位1
**Transaction 3:**
持币账户：挂出募资offer，
签名者：甲乙账户私钥
**Transaction 4:众筹成功**
持币账户付款v的osch给目标账户
时间限制：募资结束
签名者：甲乙账户私钥
**Transaction 5: 募资失败**
取消已存在的offer交易
使用osch回购，已经出售代币。

### 总结说明：首先执行123，45操作提前创建并公开是，当募资成功，项目方或其他人执行操作4将成功将v个osch转入目标账户。如果募资失败，没有账户没有v个osch将交易失败序列号加一，则可以执行操作5，回退募资的osch。
